{"version":3,"sources":["hooks/useToggleState.js","hooks/getSensors.js","components/TemperatureChart/TemperatureChart.js","hooks/useAuthenticatedUser.js","components/Sensor/sensorHoverView.js","components/App/App.js","components/NavigationBar/NavigationBar.js","components/LoginPage/LoginPage.js","components/SensorMap/map-floor-3.svg","components/SensorMap/map-floor-10.svg","components/NavigationBar/kozi-isaac-logo.png","components/LoginPage/kozi-isaac-logo.png","Views/MainPage.js","components/routes.js","index.js","fonts/OpenSans-Regular.ttf","components/Heatmap/Heatmap.js","components/SensorMap/floorConfigs.js","components/SensorMap/SensorMap.js","components/Widgets/Widgets.js","components/Sensor/Sensor.js"],"names":["useState","require","useToggleState","initial","togglerState","setState","GET_SENSORS","gql","GetSensors","useQuery","pollInterval","data","loading","error","refetch","XAxis","Recharts","YAxis","Tooltip","Area","CartesianGrid","ComposedChart","GET_QUERY","epochToShortDateTime","epoch","Date","toLocaleString","TemperatureChart","start","stop","floor","loc_x","loc_y","variables","className","animation","role","datapoints","AllTemperatureMeasurements","map","d","time","datetime","getTime","temperature","value","width","height","strokeDasharray","dataKey","type","domain","tickFormatter","unit","labelFormatter","stroke","fill","jwt","useAuthenticatedUser","user","setUser","token","localStorage","getItem","decoded","decode","email","logout","removeItem","refresh","Sensorhoverview","props","show","setShow","chartStartTime","setChartStartTime","mutationQuery","maintenance","useMutation","refetchQueries","query","toggleMaintenance","fault_code","transition","target","placement","containerPadding","id","Title","style","backgroundColor","color","as","Content","Math","round","toFixed","humidity","variant","onClick","handleOverlayClose","size","onHide","Header","closeButton","Body","global","xs","icon","faTools","name","onChange","DisplayErrorCode","withRouter","location","pathname","NavigationBar","history","useHistory","fluid","background","minHeight","expand","flex","Brand","alt","src","isaacLogo","Toggle","Menu","alignRight","Item","push","faSignInAlt","Link","href","LOGIN_QUERY","LoginPage","errorMessage","setErrorMessage","useLazyQuery","login","to","Login","accessToken","setItem","console","log","rel","logo","onSubmit","event","preventDefault","elements","password","htmlFor","aria-hidden","e","module","exports","MainPage","workingSensors","faultySensors","maintenanceSensors","MeanClimateMeasurements","filter","goodData","SensorFaults","some","faultySensor","SensorMaintenance","maintenanceSensor","Spinner","Routes","path","component","Components","exact","client","ApolloClient","uri","process","cache","InMemoryCache","root","document","getElementById","ReactDOM","render","StrictMode","basename","Heatmap","useEffect","container","querySelector","length","dataPoints","dataPoint","x","xPercent","scrollWidth","y","yPercent","scrollHeight","heatmap","create","radius","maxOpacity","minOpacity","blur","gradient","maxValue","max","minValue","min","setData","setDataMin","setDataMax","remove","config","3","dimX","dimY","floor3Map","10","floor10Map","defaultConfig","SensorMap","heatmapPrefence","showHeatMap","toggleHeatmap","displayFloor","setDisplayFloor","allfloors","sensor","sort","a","b","sign","floors","Set","undefined","floorConfig","cellWidth","cellHeight","heatmapDatapoints","s","Container","Row","Col","ls","Button","faFire","ToggleButtonGroup","ToggleButton","key","lg","Sensor","join","faulty","Widgets","avgTemp","reduce","avgHum","xl","setTarget","ref","useRef","handleHover","handleClose","onMouseEnter","onMouseLeave","left","top","opacity","position"],"mappings":"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","file":"static/js/main.b056e63d.chunk.js","sourcesContent":["const { useState } = require(\"react\")\n\n/**\n * @description exposes a boolean state variable and a method to toggle its value\n * @param {boolean} initial initial state of the toggler (true or false). Will be forcefully converted to a boolean\n * @returns {[boolean, () => void ]} the boolean state and the function to toggle it\n */\nexport const useToggleState = (initial) => {\n    const [togglerState, setState] = useState(!!initial)\n\n    const toggle = () => {\n        setState(!togglerState)\n    }\n\n    return [togglerState, toggle]\n}","import { gql, useQuery } from '@apollo/client'\n\nexport const GET_SENSORS = gql`\n  {\n    MeanClimateMeasurements {\n      floor\n      loc_x\n      loc_y\n      temperature\n      humidity\n    },\n    SensorFaults {\n      id\n      loc_x\n      loc_y\n      floor\n      timestamp\n      fault_code\n    },\n    SensorMaintenance {\n      loc_x,\n      loc_y,\n      floor,\n    }\n  }\n`\n\nexport const GetSensors = () => {\n  const { data, loading, error, refetch } = useQuery(GET_SENSORS, {\n    pollInterval: 10_000\n  })\n\n  return { data, loading, error, refetch }\n}\n\n\n","import { gql, useQuery } from '@apollo/client'\nimport React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\n// Until Rechart gets their fix together this is the only way to import from there\nimport * as Recharts from 'recharts/umd/Recharts'\nconst { XAxis, YAxis, Tooltip, Area, CartesianGrid, ComposedChart } = Recharts\n\n\nconst GET_QUERY = gql`\n    query GetTemperature($start: String $end: String $floor:Int! $loc_x: Int! $loc_y:Int! ){\n        AllTemperatureMeasurements(start: $start stop: $end floor: $floor loc_x: $loc_x loc_y: $loc_y){\n            value\n            datetime\n            is_valid\n        }\n    }\n`\n\nconst epochToShortDateTime = epoch => new Date(epoch).toLocaleString('en-GB')\n\nexport default function TemperatureChart({ start, stop, floor, loc_x, loc_y }) {\n\n    const { data, loading, error } = useQuery(GET_QUERY, {\n        variables: { start, stop, floor, loc_x, loc_y },\n        pollInterval: 10_000,\n    })\n\n    if (loading) {\n        return <div className=\"d-flex\">\n            <Spinner className=\"mx-auto\" animation=\"border\" role=\"status\"> </Spinner>\n        </div>\n    }\n\n    if (error) return <p>Something went wrong. Please try again.</p>\n\n    const datapoints = data.AllTemperatureMeasurements.map(d => ({\n        ...d,\n        time: new Date(d.datetime).getTime(),\n        temperature: d.value,\n    }))\n\n    return (\n        <Recharts.ResponsiveContainer width=\"95%\" height={700}>\n            <ComposedChart data={datapoints} >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis\n                    dataKey=\"time\" type='number'\n                    domain={['dataMin', 'dataMax']}\n                    tickFormatter={epochToShortDateTime}\n                />\n                <YAxis domain={['dataMin - 1', 'auto']} unit='°C' />\n\n                <Tooltip labelFormatter={epochToShortDateTime} />\n                <Area type=\"monotone\" dataKey=\"temperature\" stroke=\"#009DDC\" fill=\"#009DDC\" unit=\"°C\" />\n            </ComposedChart>\n        </Recharts.ResponsiveContainer>\n\n    )\n}\n","import { useState } from 'react'\n\nconst jwt = require('jsonwebtoken')\n\nexport const useAuthenticatedUser = () => {\n\n    const [user, setUser] = useState(null)\n    const token = localStorage.getItem('token')\n    const decoded = jwt.decode(token)\n\n    if (decoded && !user) {\n        setUser({\n            email: decoded.email,\n\n            logout() {\n                localStorage.removeItem('token')\n                setUser(null)\n            },\n\n            refresh() {\n                setUser(null)\n            },\n        })\n    }\n    return user\n}\n\n","import React, { useState } from 'react'\n\nimport { Overlay, Popover, Row, Button, Modal, ToggleButtonGroup, ToggleButton, Col } from 'react-bootstrap'\nimport { gql, useMutation } from '@apollo/client'\nimport { GET_SENSORS } from '../../hooks/getSensors'\nimport TemperatureChart from '../TemperatureChart/TemperatureChart'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTools } from '@fortawesome/free-solid-svg-icons'\n\nexport function Sensorhoverview(props) {\n\n  const [show, setShow] = useState(false)\n  const [chartStartTime, setChartStartTime] = useState('-1d')\n\n  const handleClose = () => setShow(false)\n\n  const handleShow = () => {\n    setShow(true)\n    props.handleOverlayClose()\n  }\n\n  const mutationQuery = gql`\n    mutation {\n      SetMaintenanceMode(\n        input: {\n          loc_x:${props.loc_x}, \n          loc_y:${props.loc_y}, \n          floor:${props.floor}, \n          isInMaintenance:${!props.maintenance}\n        }\n      )\n    }\n    `\n\n  const [toggleMaintenance] = useMutation(mutationQuery, {\n    refetchQueries: [\n      { query: GET_SENSORS }\n    ]\n  })\n\n\n  if (props.fault_code === '') {\n    return (\n      <>\n        <Overlay\n          transition={null}\n          show={props.show}\n          target={props.target}\n          placement='top'\n          containerPadding={20}\n        >\n          <Popover id='popover-contained'>\n            <Popover.Title\n              className='text-nowrap'\n              style={{ backgroundColor: '#349CDB', color: '#ffffff' }}\n              as='h3'\n            >\n              Sensor Information\n          </Popover.Title>\n            <Popover.Content>\n              <strong>Floor:</strong> {props.floor}\n              <br />\n              <strong>X:</strong> {props.loc_x + ' '}\n              <strong>Y:</strong> {props.loc_y}\n              <br />\n              <strong>T:</strong>{' '}\n              {(Math.round(props.temperature * 100) / 100).toFixed(1) + ' °C '}\n              <strong>H:</strong>{' '}\n              {(Math.round(props.humidity * 100) / 100).toFixed(1)}%\n                <Row className=\"justify-content-center\">\n                <Button variant=\"outline-primary\" className=\"mt-2\" onClick={handleShow}>\n                  Details\n                  </Button>\n              </Row>\n            </Popover.Content>\n          </Popover>\n        </Overlay>\n\n        <Modal show={show} animation={false} size=\"xl\" onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Details for Sensor ({props.loc_x}, {props.loc_y}) on floor {props.floor}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body >\n            <Row>\n              {global.user && (\n                <Col xs=\"auto\">\n                  <Button variant=\"outline-warning\" onClick={() => toggleMaintenance({})}>\n                    <FontAwesomeIcon size=\"2x\" className=\"pr-1\" icon={faTools} />\n                    <span>Turn maintenance {props.maintenance ? \"off\" : \"on\"}</span>\n                  </Button>\n                </Col>\n              )}\n              <Col xs=\"auto\">\n                <ToggleButtonGroup name=\"durationBtnGroup\" value={chartStartTime} onChange={setChartStartTime}>\n                  <ToggleButton value=\"-1d\" >1 Day</ToggleButton>\n                  <ToggleButton value=\"-3d\" >3 Day</ToggleButton>\n                  <ToggleButton value=\"-7d\" >7 Days</ToggleButton>\n                </ToggleButtonGroup>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <TemperatureChart start={chartStartTime} floor={props.floor} loc_x={props.loc_x} loc_y={props.loc_y} />\n              </Col>\n            </Row>\n          </Modal.Body>\n        </Modal>\n\n      </>\n    )\n  } else {\n    return (\n      <Overlay\n        transition={null}\n        show={props.show}\n        target={props.target}\n        placement='top'\n        containerPadding={20}\n      >\n        <Popover id='popover-contained'>\n          <Popover.Title\n            className='text-nowrap'\n            style={{ backgroundColor: '#C12D3F', color: '#ffffff' }}\n            as='h3'\n          >\n            Sensor Information\n          </Popover.Title>\n          <Popover.Content>\n            <strong>An unexpected error occured:</strong>\n            <br />\n            {DisplayErrorCode(props.fault_code)}\n          </Popover.Content>\n        </Popover>\n      </Overlay>\n    )\n  }\n}\n\n\n\n\nfunction DisplayErrorCode(error) {\n  switch (error) {\n    case 'ERROR_TEMPERATURE_OUT_OF_RANGE':\n      return 'Temperature was unreasonably high or low'\n\n    case 'ERROR_TEMPERATURE_DIFFERENCE_MORE_THAN_2_CELSIUS':\n      return 'Temperature changed abruptly'\n\n    case 'ERROR_NOT_ENOUGH_VALID_ENTRIES':\n      return 'Sensor did not send enough temperature measurements'\n    default:\n      return 'Unknown error...'\n  }\n}\n\nexport default Sensorhoverview\n","import React from 'react'\nimport Routes from '../routes.js'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport * as Components from '../index'\nimport { withRouter } from 'react-router-dom'\nimport { useAuthenticatedUser } from '../../hooks/index.js'\n\nexport const App = ({ location }) => {\n  global.user = useAuthenticatedUser()\n  return (\n    <div>\n      {location.pathname !== '/login' && <Components.NavigationBar />}\n      <Routes />\n    </div>\n  )\n}\n\nexport default withRouter(App)\n","import React from 'react'\nimport { Container, Navbar, Nav, Dropdown } from 'react-bootstrap'\nimport './NavigationBar.css'\nimport isaacLogo from './kozi-isaac-logo.png'\nimport { useHistory } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons'\n\nexport default function NavigationBar() {\n  const history = useHistory()\n\n  const toLogin = () => {\n    history.push('/login')\n  }\n\n  return (\n    <Container fluid className=\"px-0 pb-5\" >\n      <Navbar className=\"d-flex\" style={{ background: \"white\", minHeight: 120 }} expand=\"lg\">\n        <div style={{ flex: 1 }}>\n          <Navbar.Brand className='screen-center'>\n            <img\n              alt='Kozi Isaac logo'\n              src={isaacLogo}\n              width='300px'\n              className='align-top logo img-fluid'\n            />\n          </Navbar.Brand>\n        </div>\n\n        {global.user && (\n          <Nav>\n            <Dropdown>\n              <Dropdown.Toggle className='font-weight-bold' variant='none'>\n                {global.user.email}\n              </Dropdown.Toggle>\n              <Dropdown.Menu alignRight={true}>\n                <Dropdown.Item onClick={global.user.logout}>Log out</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Nav>\n        )}\n        {!global.user && (\n          <Nav>\n            <div onClick={toLogin} className=\"text-center login-buttons\">\n              <FontAwesomeIcon icon={faSignInAlt} size=\"3x\" />\n              <Nav.Link href=\"login\" className=\"text-decoration-none lead font-weight-bold\">Login</Nav.Link>\n            </div>\n          </Nav>\n        )}\n      </Navbar>\n    </Container>\n  )\n}\n","import React, { useState } from 'react'\nimport './LoginPage.css'\nimport logo from './kozi-isaac-logo.png'\nimport { Redirect, useHistory } from 'react-router-dom'\nimport { gql, useLazyQuery } from '@apollo/client'\nimport { Alert } from 'react-bootstrap'\n\nconst LOGIN_QUERY = gql`query Login($email: String, $password:String){\n    Login(email: $email password: $password){\n      accessToken \n      error\n    }\n  }\n`\n\nexport default function LoginPage() {\n  const history = useHistory()\n\n  const [errorMessage, setErrorMessage] = useState(null)\n\n\n  const [login, { error, data }] = useLazyQuery(LOGIN_QUERY)\n\n  const handleLogin = (event) => {\n    event.preventDefault()\n    login({\n      variables: {\n        email: event.target.elements.email.value,\n        password: event.target.elements.password.value,\n      },\n    })\n  }\n\n  const toHome = (e) => {\n    e.preventDefault()\n    history.push('')\n  }\n\n  if (global.user) {\n    return <Redirect to='/' />\n  }\n\n  if (data && data.Login.accessToken) {\n    localStorage.setItem('token', data.Login.accessToken)\n    return <Redirect to='/' />\n  }\n\n  if (data && data.Login.error && data.Login.error !== errorMessage) {\n    setErrorMessage(data.Login.error)\n  }\n\n  if (error) {\n    console.log(error)\n  }\n\n  return (\n    <div className='main-login'>\n      <small> {global.user && global.user.email} </small>\n      <link\n        href='https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css'\n        rel='stylesheet'\n      />\n      <div className='d-md-flex h-md-100 align-items-center'>\n        <div className='col-md-6 pt-md-5 p-0 h-md-100 '>\n          <div className='text-white  d-md-flex h-100 p-5'>\n            <div className='p-md-5 pb-5'>\n              <div className='d-flex justify-content-center align-items-center'>\n                <div className='col-10 col-md-10'>\n                  <img className='img img-fluid' src={logo} alt='logo' />\n                </div>\n              </div>\n\n              <hr />\n\n              <p className='text-p-secondary h2 mt-5'>Login</p>\n\n              <form className='mt-3' onSubmit={handleLogin}>\n                <label htmlFor='email' className='text-p-secondary'>\n                  Email\n                </label>\n                <div className='input-group'>\n                  <div className='input-group-prepend'>\n                    <span className='input-group-text'>\n                      <i className='fa fa-envelope' aria-hidden='true'></i>\n                    </span>\n                  </div>\n                  <input type='email' name='email' className='form-control' />\n                </div>\n\n                <label htmlFor='email' className='text-p-secondary mt-4'>\n                  Password\n                </label>\n                <div className='input-group'>\n                  <div className='input-group-prepend'>\n                    <span className='input-group-text'>\n                      <i className='fa fa-unlock-alt' aria-hidden='true'></i>\n                    </span>\n                  </div>\n                  <input\n                    type='password'\n                    name='password'\n                    className='form-control'\n                  />\n                </div>\n                {/* Error message */}\n                <Alert className='mt-4' show={errorMessage} variant='info'>\n                  {' '}\n                  {errorMessage}{' '}\n                </Alert>\n\n                <div className='col-xl-6'>\n                  <button\n                    id='submitAction'\n                    type='submit'\n                    className='btn btn-p-primary btn-block btn-round mt-5  '\n                  >\n                    <span\n                      id='main-executeAction'\n                      className='text-p-primary text-font-primary'\n                    >\n                      Login\n                    </span>\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n\n        <div className='col-md-6 bg-blue '>\n          <div className='d-flex flex-column align-items-center h-md-100  p-5 justify-content-center'>\n            <h1 id='side-action' className='h1 text-white'>\n              Guest\n            </h1>\n            <p id='side-description' className='text-white h4 text-center'>\n              Enter to view real-time sensor information!\n            </p>\n            <a\n              href='/'\n              id='switcher'\n              onClick={toHome}\n              className='btn btn-round btn-switcher btn-lg btn-block mt-3'\n            >\n              Login as a guest\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","module.exports = __webpack_public_path__ + \"static/media/map-floor-3.c5b287e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/map-floor-10.984b3aac.svg\";","module.exports = __webpack_public_path__ + \"static/media/kozi-isaac-logo.df9a5e3a.png\";","module.exports = __webpack_public_path__ + \"static/media/kozi-isaac-logo.df9a5e3a.png\";","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nimport * as Components from '../components/index';\nimport { GetSensors } from '../hooks';\n\nexport default function MainPage() {\n  const { data, loading, error } = GetSensors();\n\n  if (error) return <h1>Something went wrong. Please try again</h1>;\n\n  let workingSensors = [];\n  let faultySensors = [];\n  let maintenanceSensors = [];\n\n  if (data) {\n    workingSensors = data.MeanClimateMeasurements.filter(\n      (goodData) =>\n        !data.SensorFaults.some(\n          (faultySensor) =>\n            goodData.loc_x === faultySensor.loc_x &&\n            goodData.loc_y === faultySensor.loc_y &&\n            goodData.floor === faultySensor.floor\n        )\n    );\n\n    workingSensors = data.MeanClimateMeasurements.filter(\n      (goodData) =>\n        !data.SensorMaintenance.some(\n          (maintenanceSensor) =>\n            goodData.loc_x === maintenanceSensor.loc_x &&\n            goodData.loc_y === maintenanceSensor.loc_y &&\n            goodData.floor === maintenanceSensor.floor\n        )\n    );\n\n    maintenanceSensors = data.SensorMaintenance;\n\n    faultySensors = data.SensorFaults;\n  }\n\n  return (\n    <div>\n      {/* Loading spinner */}\n      {loading && (\n        <div className='d-flex'>\n          <Spinner className='mx-auto' animation='border' role='status'>\n            {' '}\n          </Spinner>\n        </div>\n      )}\n\n      <Components.SensorMap\n        workingSensors={workingSensors}\n        faultySensors={faultySensors}\n        maintenanceSensors={maintenanceSensors}\n      />\n      <Components.Widgets workingSensors={workingSensors} />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport * as Components from './index';\nimport MainPage from '../Views/MainPage';\nconst Routes = () => (\n  <main>\n    <Switch>\n      <Route path='/login' component={Components.LoginPage}>\n        {/* { sessionStorage.getItem('state') ? <Redirect to=\"/\" /> : undefined } */}\n      </Route>\n      <Route exact path='/' component={MainPage} />\n      <Route path='*' component={() => <div>error not found</div>} />\n    </Switch>\n  </main>\n);\n\nexport default Routes;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './components'\nimport { BrowserRouter } from 'react-router-dom'\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client'\nimport './styles.css'\n\nconst client = new ApolloClient({\n  uri: process.env.REACT_APP_API_URL || 'http://localhost:4000/graphql/',\n  cache: new InMemoryCache(),\n})\n\nconst root = document.getElementById('root')\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <BrowserRouter basename='/kozi-frontend'>\n        <App />\n      </BrowserRouter>\n    </ApolloProvider>\n  </React.StrictMode>,\n  root\n)\n","module.exports = __webpack_public_path__ + \"static/media/OpenSans-Regular.3ed9575d.ttf\";","import React, { useEffect } from 'react'\nimport './Heatmap.css'\nimport heatmap from 'heatmapjs'\n\n\nexport const Heatmap = ({\n    data,\n}) => {\n\n    useEffect(() => {\n\n        let container = document.querySelector('.heatmap-container')\n\n        if (!data || !data.length)\n            return\n\n        let dataPoints = data.map(dataPoint => ({\n            x: 20 + dataPoint.xPercent * container.scrollWidth / 100,\n            y: 10 + dataPoint.yPercent * container.scrollHeight / 100,\n            ...dataPoint\n        }))\n\n        let map = heatmap.create({\n            container,\n            radius: container.scrollWidth / 5,\n            maxOpacity: .4,\n            minOpacity: .0,\n            blur: 1,\n            gradient: {\n                '.0': 'rgb(0,255,255)',\n                '.2': 'rgb(0,200,200)',\n                '.4': 'rgb(0,150,150)',\n                '.6': 'rgb(0,100,200)',\n                '.8': 'rgb(150,0,250)',\n                '1': 'rgb(255,0,0)',\n            }\n        })\n\n\n        let maxValue = Math.max(...dataPoints.map(d => d.value))\n        let minValue = Math.min(...dataPoints.map(d => d.value))\n\n        map.setData({\n            data: dataPoints,\n        }).setDataMin(minValue).setDataMax(maxValue)\n\n\n        return () => {\n            let heatmap = document.querySelector('.heatmap-container canvas')\n            if (heatmap) heatmap.remove()\n        }\n    })\n\n\n    return (\n        <div className=\"heatmap-component\">\n            <div className=\"heatmap-container\">\n\n            </div>\n        </div >\n    )\n\n} ","import floor3Map from \"./map-floor-3.svg\"\nimport floor10Map from \"./map-floor-10.svg\"\n\nconst config = {\n    3: {\n        dimX: 32,\n        dimY: 14,\n        map: floor3Map\n    },\n    10: {\n        dimX: 24,\n        dimY: 16,\n        map: floor10Map,\n    }\n}\n\nconst defaultConfig = {\n    ...config[3]\n}\n\nexport function getFloorConfig(floor) {\n    return config[floor] || defaultConfig\n}","import React, { useState } from 'react';\nimport {\n  Row,\n  Col,\n  Container,\n  Button,\n  ToggleButton,\n  ToggleButtonGroup,\n} from 'react-bootstrap';\nimport './styles.css';\nimport { Sensor } from '../';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFire } from '@fortawesome/free-solid-svg-icons';\nimport { useToggleState } from '../../hooks/useToggleState';\nimport { Heatmap } from '../Heatmap/Heatmap';\nimport { getFloorConfig } from './floorConfigs';\n\nconst LOCAL_KEY_SHOW_HEATMAP = 'PREFERENCES_SHOW_HEATMAP';\n\nexport const SensorMap = ({\n  workingSensors,\n  faultySensors,\n  maintenanceSensors,\n}) => {\n  const heatmapPrefence =\n    localStorage.getItem(LOCAL_KEY_SHOW_HEATMAP) !== 'false';\n\n  let [showHeatMap, toggleHeatmap] = useToggleState(heatmapPrefence);\n  let [displayFloor, setDisplayFloor] = useState(null);\n\n  let allfloors = [...workingSensors, ...faultySensors, ...maintenanceSensors]\n    .map((sensor) => sensor.floor)\n    .sort((a, b) => Math.sign(a - b));\n  let floors = new Set(allfloors);\n\n  if (displayFloor === null && allfloors[0] !== undefined)\n    setDisplayFloor(allfloors[0]);\n\n  let floorConfig = getFloorConfig(displayFloor);\n\n  const cellWidth = 100 / floorConfig.dimX; // 32 cells horizontally, each one of them 100/32% wide\n  const cellHeight = 100 / floorConfig.dimY; // 14 cells vertically, each one of them 100/14% wide\n\n  workingSensors = workingSensors.filter(\n    (sensor) => sensor.floor === displayFloor\n  );\n  faultySensors = faultySensors.filter(\n    (sensor) => sensor.floor === displayFloor\n  );\n  maintenanceSensors = maintenanceSensors.filter(\n    (sensor) => sensor.floor === displayFloor\n  );\n\n  let heatmapDatapoints = workingSensors.map((s) => ({\n    xPercent: (s.loc_x - 1) * cellWidth,\n    yPercent: (s.loc_y - 1) * cellHeight,\n    value: s.temperature,\n  }));\n\n  const toggleHeatmapClick = () => {\n    localStorage.setItem(LOCAL_KEY_SHOW_HEATMAP, !showHeatMap);\n    toggleHeatmap();\n  };\n\n  return (\n    <>\n      <Container fluid>\n        {/* Buttons */}\n        <Row className='mt-n4 pb-3'>\n          <Col xs={1} ls={2}></Col>\n          <Col xs='auto'>\n            <Button variant='outline-primary' onClick={toggleHeatmapClick}>\n              <FontAwesomeIcon icon={faFire} size='2x' className='pr-1' />\n              <span>Heatmap</span>\n            </Button>\n          </Col>\n          <Col>\n            <ToggleButtonGroup\n              className='h-100'\n              value={displayFloor}\n              onChange={setDisplayFloor}\n              name='floorSelectionGroup'\n            >\n              {[...floors].map((floor) => (\n                <ToggleButton\n                  value={floor}\n                  variant='outline-primary'\n                  className='d-flex align-items-center'\n                  key={floor}\n                >\n                  {' '}\n                  {floor}{' '}\n                </ToggleButton>\n              ))}\n            </ToggleButtonGroup>\n          </Col>\n        </Row>\n\n        {/* Sensor Map */}\n        <Row className='justify-content-center'>\n          <Col xs={0} lg={1}></Col>\n          <Col className='p-0'>\n            {/* Heatmap */}\n            {showHeatMap && <Heatmap data={heatmapDatapoints} />}\n\n            {/* Working sensors */}\n            {workingSensors.map((sensor) => (\n              <Sensor\n                key={[sensor.loc_x, sensor.loc_y, sensor.floor].join('-')}\n                {...sensor}\n                cellHeight={cellHeight}\n                cellWidth={cellWidth}\n              />\n            ))}\n\n            {/* Faulty sensors */}\n            {faultySensors.map((sensor) => (\n              <Sensor\n                key={[sensor.loc_x, sensor.loc_y, sensor.floor].join('-')}\n                {...sensor}\n                cellHeight={cellHeight}\n                cellWidth={cellWidth}\n                faulty={true}\n              />\n            ))}\n\n            {/* Maintenance sensors */}\n            {maintenanceSensors.map((sensor) => (\n              <Sensor\n                key={[sensor.loc_x, sensor.loc_y, sensor.floor].join('-')}\n                {...sensor}\n                cellHeight={cellHeight}\n                cellWidth={cellWidth}\n                maintenance={true}\n              />\n            ))}\n\n            <img\n              className='w-100 floor-map'\n              id='wp'\n              src={floorConfig.map}\n              alt='Map of the floor'\n            />\n          </Col>\n          <Col xs={0} lg={1}></Col>\n        </Row>\n      </Container>\n      <div></div>\n    </>\n  );\n};\n","import React from \"react\"\nimport { Container, Row, Col } from \"react-bootstrap\"\nimport \"./widgets.css\"\n\nconst Widgets = ({ workingSensors }) => {\n\n  var avgTemp = workingSensors.reduce(\n    (a, b) => a + b.temperature,\n    0\n  ) / workingSensors.length || 0\n\n  var avgHum = workingSensors.reduce(\n    (a, b) => a + b.humidity,\n    0\n  ) / workingSensors.length || 0\n\n  return (\n    <Container>\n      <Row lg=\"8\" xl=\"7\" className=\"justify-content-center\">\n        <Col className=\"widget \">\n          <h1 className=\"value\">{workingSensors.length}</h1>\n          <p className=\"description\">Active sensors</p>\n        </Col>\n        <Col className=\"widget\">\n          <h1 className=\"value\">{avgTemp.toFixed(1)}°C</h1>\n          <p className=\"description\">Avg.Temp</p>\n        </Col>\n        <Col className=\"widget\">\n          <h1 className=\"value\">{avgHum.toFixed(1)}%</h1>\n          <p className=\"description\">Avg.Hum</p>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Widgets\n","import React, { useState, useRef } from 'react'\nimport '../../fonts/OpenSans-Regular.ttf'\nimport './sensor.css'\nimport SensorHoverView from './sensorHoverView'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTools } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Sensor({\n  floor,\n  loc_x,\n  loc_y,\n  faulty,\n  fault_code,\n  maintenance,\n  cellHeight = 100 / 32,\n  cellWidth = 100 / 14,\n  temperature = 0.0,\n  humidity\n}) {\n\n  const [show, setShow] = useState(false)\n  const [target, setTarget] = useState(null)\n  const ref = useRef(null)\n\n  const handleHover = (event) => {\n    setShow(true)\n    setTarget(event.target)\n  }\n\n  const handleClose = (event) => {\n    setShow(false)\n  }\n\n  if (maintenance) {\n    return (\n      <>\n        <div\n          onMouseEnter={handleHover}\n          onMouseLeave={handleClose}\n          className='sensor maintenance-sensor'\n          style={{\n            left: (loc_x - 1.25) * cellWidth + '%',\n            top: (loc_y - 1.25) * cellHeight + '%',\n            width: cellWidth + '%',\n            height: cellHeight + '%',\n          }}\n        >\n          <span>\n            <FontAwesomeIcon style={{ color: \"black\", opacity: 0.65 }} icon={faTools} size=\"3x\" />\n          </span>\n          <SensorHoverView\n            handleOverlayClose={handleClose}\n            show={show}\n            maintenance={true}\n            target={target}\n            floor={floor}\n            fault_code=''\n            loc_x={loc_x}\n            loc_y={loc_y}\n          />\n        </div>\n      </>\n    )\n  }\n\n  else if (faulty) {\n    return (\n      <>\n        <div\n          onMouseEnter={handleHover}\n          onMouseLeave={handleClose}\n          className='sensor faulty-sensor'\n          style={{\n            position: 'absolute',\n            left: (loc_x - 1.25) * cellWidth + '%',\n            top: (loc_y - 1.25) * cellHeight + '%',\n            width: cellWidth + '%',\n            height: cellHeight + '%',\n          }}\n        >\n          <span>!</span>\n          <SensorHoverView\n            handleOverlayClose={handleClose}\n            show={show}\n            target={target}\n            floor={floor}\n            fault_code={fault_code}\n            loc_x={loc_x}\n            loc_y={loc_y}\n          />\n        </div>\n      </>\n    )\n  } else {\n    return (\n      <>\n        <div\n          ref={ref}\n          onMouseEnter={handleHover}\n          onMouseLeave={handleClose}\n          className='sensor working-sensor'\n          style={{\n            left: (loc_x - 1.25) * cellWidth + '%',\n            top: (loc_y - 1.25) * cellHeight + '%',\n            width: cellWidth + '%',\n            height: cellHeight + '%',\n          }}\n        >\n          <span>{temperature.toFixed(1) + '°C'}</span>\n          <SensorHoverView\n            handleOverlayClose={handleClose}\n            show={show}\n            target={target}\n            floor={floor}\n            maintenance={false}\n            temperature={temperature}\n            fault_code=''\n            humidity={humidity}\n            loc_x={loc_x}\n            loc_y={loc_y}\n          />\n        </div>\n      </>\n    )\n  }\n}\n"],"sourceRoot":""}