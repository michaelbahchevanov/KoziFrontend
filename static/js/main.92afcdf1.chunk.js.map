{"version":3,"sources":["components/SensorMap/map-floor-3.svg","components/NavigationBar/kozi-isaac-logo.png","components/LoginPage/kozi-isaac-logo.png","fonts/OpenSans-Regular.ttf","Views/MainPage.js","components/routes.js","components/App/App.js","hooks/useToggleState.js","components/Heatmap/Heatmap.js","components/SensorMap/SensorMap.js","hooks/useAuthenticatedUser.js","components/NavigationBar/NavigationBar.js","components/Widgets/Widgets.js","components/Sensor/sensorHoverView.js","components/Sensor/Sensor.js","components/LoginPage/LoginPage.js","index.js"],"names":["module","exports","GET_SENSORS","gql","MainPage","useQuery","pollInterval","data","loading","error","workingSensors","faultySensors","MeanClimateMeasurements","filter","goodData","SensorFaults","some","faultySensor","loc_x","loc_y","floor","className","Spinner","animation","role","Routes","path","component","Components","exact","withRouter","location","pathname","useState","require","Heatmap","useEffect","container","document","querySelector","length","dataPoints","map","dataPoint","x","xPercent","scrollWidth","y","yPercent","scrollHeight","heatmap","create","radius","maxOpacity","minOpacity","blur","gradient","maxValue","Math","max","d","value","minValue","min","setData","setDataMin","setDataMax","remove","SensorMap","initial","togglerState","setState","useToggleState","localStorage","getItem","showHeatMap","toggleHeatmap","heatmapDatapoints","s","temperature","Container","fluid","Row","Col","xs","lg","Button","variant","onClick","setItem","icon","faFire","size","sensor","Sensor","key","join","cellHeight","cellWidth","faulty","src","floorMapImg","alt","jwt","useAuthenticatedUser","user","setUser","token","decoded","decode","email","logout","removeItem","refresh","NavigationBar","history","useHistory","Navbar","style","background","minHeight","expand","flex","Brand","isaacLogo","width","Nav","Dropdown","Toggle","Menu","alignRight","Item","push","faSignInAlt","Link","href","Widgets","avgTemp","reduce","a","b","avgHum","humidity","xl","toFixed","Sensorhoverview","props","fault_code","Overlay","transition","show","target","placement","containerPadding","Popover","id","Title","backgroundColor","color","as","Content","round","DisplayErrorCode","setShow","setTarget","ref","useRef","handleHover","event","handleClose","onMouseEnter","onMouseLeave","position","left","top","height","LOGIN_QUERY","LoginPage","errorMessage","setErrorMessage","useLazyQuery","login","to","Login","accessToken","console","log","rel","logo","onSubmit","preventDefault","variables","elements","password","htmlFor","aria-hidden","type","name","Alert","e","client","ApolloClient","uri","process","cache","InMemoryCache","root","getElementById","ReactDOM","render","StrictMode","basename"],"mappings":"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","file":"static/js/main.92afcdf1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/map-floor-3.c5b287e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/kozi-isaac-logo.df9a5e3a.png\";","module.exports = __webpack_public_path__ + \"static/media/kozi-isaac-logo.df9a5e3a.png\";","module.exports = __webpack_public_path__ + \"static/media/OpenSans-Regular.3ed9575d.ttf\";","import { gql, useQuery } from '@apollo/client'\nimport React from \"react\"\nimport { Spinner } from 'react-bootstrap'\n\nimport * as Components from \"../components/index\"\n\nconst GET_SENSORS = gql`\n  {\n    MeanClimateMeasurements {\n      floor\n      loc_x\n      loc_y\n      temperature\n      humidity\n    },\n    SensorFaults {\n      id\n      loc_x\n      loc_y\n      floor\n      timestamp\n      fault_code\n    }\n  }\n  \n`\n\nexport default function MainPage() {\n\n  const { data, loading, error } = useQuery(GET_SENSORS, {\n    pollInterval: 10_000\n  })\n\n  if (error) return <h1>Something went wrong. Please try again</h1>\n\n  let workingSensors = []\n  let faultySensors = []\n\n\n  if (data) {\n    workingSensors = data.MeanClimateMeasurements.filter(goodData => !data.SensorFaults.some(\n      faultySensor => goodData.loc_x === faultySensor.loc_x && goodData.loc_y === faultySensor.loc_y && goodData.floor === faultySensor.floor\n    ))\n    faultySensors = data.SensorFaults\n  }\n\n  return (\n    <div>\n\n      {/* Loading spinner */}\n      {loading && <div className=\"d-flex\">\n        <Spinner className=\"mx-auto\" animation=\"border\" role=\"status\"> </Spinner>\n      </div>}\n\n      <Components.SensorMap workingSensors={workingSensors} faultySensors={faultySensors} />\n      <Components.Widgets workingSensors={workingSensors} />\n    </div>\n  )\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport * as Components from './index';\nimport MainPage from '../Views/MainPage';\nconst Routes = () => (\n  <main>\n    <Switch>\n      <Route path='/login' component={Components.LoginPage}>\n        {/* { sessionStorage.getItem('state') ? <Redirect to=\"/\" /> : undefined } */}\n      </Route>\n      <Route exact path='/' component={MainPage} />\n      <Route path='*' component={() => <div>error not found</div>} />\n    </Switch>\n  </main>\n);\n\nexport default Routes;\n","import React from 'react';\nimport Routes from '../routes.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as Components from '../index';\nimport { withRouter } from 'react-router-dom';\n\nexport const App = ({ location }) => {\n  return (\n    <div>\n      {location.pathname !== '/login' && <Components.NavigationBar />}\n      <Routes />\n    </div>\n  );\n};\n\nexport default withRouter(App);\n","const { useState } = require(\"react\")\n\n/**\n * @description exposes a boolean state variable and a method to toggle its value\n * @param {boolean} initial initial state of the toggler (true or false). Will be forcefully converted to a boolean\n * @returns {[boolean, () => void ]} the boolean state and the function to toggle it\n */\nexport const useToggleState = (initial) => {\n    const [togglerState, setState] = useState(!!initial)\n\n    const toggle = () => {\n        setState(!togglerState)\n    }\n\n    return [togglerState, toggle]\n}","import React, { useEffect } from 'react'\nimport './Heatmap.css'\nimport heatmap from 'heatmapjs'\n\n\nexport const Heatmap = ({\n    data,\n}) => {\n\n    useEffect(() => {\n\n        let container = document.querySelector('.heatmap-container')\n\n        if (!data || !data.length)\n            return\n\n        let dataPoints = data.map(dataPoint => ({\n            x: 20 + dataPoint.xPercent * container.scrollWidth / 100,\n            y: 10 + dataPoint.yPercent * container.scrollHeight / 100,\n            ...dataPoint\n        }))\n\n        let map = heatmap.create({\n            container,\n            radius: container.scrollWidth / 5,\n            maxOpacity: .4,\n            minOpacity: .0,\n            blur: 1,\n            gradient: {\n                '.0': 'rgb(0,255,255)',\n                '.2': 'rgb(0,200,200)',\n                '.4': 'rgb(0,150,150)',\n                '.6': 'rgb(0,100,200)',\n                '.8': 'rgb(150,0,250)',\n                '1': 'rgb(255,0,0)',\n            }\n        })\n\n\n        let maxValue = Math.max(...dataPoints.map(d => d.value))\n        let minValue = Math.min(...dataPoints.map(d => d.value))\n\n        map.setData({\n            data: dataPoints,\n        }).setDataMin(minValue).setDataMax(maxValue)\n\n\n        return () => {\n            let heatmap = document.querySelector('.heatmap-container canvas')\n            if (heatmap) heatmap.remove()\n        }\n    })\n\n\n    return (\n        <div className=\"heatmap-component\">\n            <div className=\"heatmap-container\">\n\n            </div>\n        </div >\n    )\n\n} ","import React from 'react'\nimport { Row, Col, Container, Button } from 'react-bootstrap'\nimport floorMapImg from './map-floor-3.svg'\nimport './styles.css'\nimport { Sensor } from '../'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFire } from '@fortawesome/free-solid-svg-icons'\nimport { useToggleState } from '../../hooks/useToggleState'\nimport { Heatmap } from '../Heatmap/Heatmap'\n\nconst CELL_WIDTH = 100 / 32 // 32 cells horizontally, each one of them 100/32% wide\nconst CELL_HEIGHT = 100 / 14 // 14 cells vertically, each one of them 100/14% wide\n\nconst LOCAL_KEY_SHOW_HEATMAP = 'PREFERENCES_SHOW_HEATMAP'\n\nexport const SensorMap = ({ workingSensors, faultySensors }) => {\n\n  const heatmapPrefence = localStorage.getItem(LOCAL_KEY_SHOW_HEATMAP) !== \"false\"\n\n  let [showHeatMap, toggleHeatmap] = useToggleState(heatmapPrefence)\n\n  let heatmapDatapoints = workingSensors.map(s => ({\n    xPercent: (s.loc_x - 1) * CELL_WIDTH,\n    yPercent: (s.loc_y - 1) * CELL_HEIGHT,\n    value: s.temperature,\n  }))\n\n\n  const toggleHeatmapClick = () => {\n    localStorage.setItem(LOCAL_KEY_SHOW_HEATMAP, !showHeatMap)\n    toggleHeatmap()\n  }\n\n  return (\n    <Container fluid>\n\n      {/* Buttons */}\n      <Row className='justify-content-center mt-n4 pb-3' >\n        <Col xs={11} lg={10}>\n          <Button variant=\"outline-primary\" onClick={toggleHeatmapClick}>\n            <FontAwesomeIcon icon={faFire} size=\"2x\" className=\"pr-1\" />\n            Heatmap\n          </Button>\n        </Col>\n      </Row>\n\n      {/* Sensor Map */}\n      <Row className='justify-content-center'>\n        <Col xs={11} lg={10} className='p-0'>\n\n          {/* Heatmap */}\n          {showHeatMap && <Heatmap data={heatmapDatapoints} />}\n\n          {/* Working sensors */}\n          {workingSensors.map((sensor) => (\n            <Sensor key={[sensor.loc_x, sensor.loc_y, sensor.floor].join(\"-\")}\n              {...sensor}\n              cellHeight={CELL_HEIGHT}\n              cellWidth={CELL_WIDTH}\n            />\n          ))}\n\n          {/* Faulty sensors */}\n          {faultySensors.map((sensor) => (\n            <Sensor key={[sensor.loc_x, sensor.loc_y, sensor.floor].join(\"-\")}\n              {...sensor}\n              cellHeight={CELL_HEIGHT}\n              cellWidth={CELL_WIDTH}\n              faulty={true}\n            />\n          ))}\n\n          <img className='w-100 floor-map' src={floorMapImg} alt='Map of the floor' />\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n","import { useState } from 'react'\n\nconst jwt = require('jsonwebtoken')\n\nexport const useAuthenticatedUser = () => {\n\n    const [user, setUser] = useState(null)\n    const token = localStorage.getItem('token')\n    const decoded = jwt.decode(token)\n\n    if (decoded && !user) {\n        setUser({\n            email: decoded.email,\n\n            logout() {\n                localStorage.removeItem('token')\n                setUser(false)\n            },\n\n            refresh() {\n                setUser(false)\n            },\n        })\n    }\n    return user\n}\n\n","import React from 'react'\nimport { Container, Navbar, Nav, Dropdown } from 'react-bootstrap'\nimport './NavigationBar.css'\nimport isaacLogo from './kozi-isaac-logo.png'\nimport { useHistory } from 'react-router-dom'\nimport { useAuthenticatedUser } from '../../hooks'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons'\n\nexport default function NavigationBar() {\n  const history = useHistory()\n\n  const toLogin = () => {\n    history.push('/login')\n  }\n\n  const user = useAuthenticatedUser()\n\n  return (\n    <Container fluid className=\"px-0 pb-5\" >\n      <Navbar className=\"d-flex\" style={{ background: \"white\", minHeight: 120 }} expand=\"lg\">\n        <div style={{ flex: 1 }}>\n          <Navbar.Brand className='screen-center'>\n            <img\n              alt='Kozi Isaac logo'\n              src={isaacLogo}\n              width='300px'\n              className='align-top logo img-fluid'\n            />\n          </Navbar.Brand>\n        </div>\n\n        {user && (\n          <Nav>\n            <Dropdown>\n              <Dropdown.Toggle className='font-weight-bold' variant='none'>\n                {user.email}\n              </Dropdown.Toggle>\n              <Dropdown.Menu alignRight={true}>\n                <Dropdown.Item onClick={user.logout}>Log out</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Nav>\n        )}\n        {!user && (\n          <Nav>\n            <div onClick={toLogin} className=\"text-center login-buttons\">\n              <FontAwesomeIcon icon={faSignInAlt} size=\"3x\" />\n              <Nav.Link href=\"login\" className=\"text-decoration-none lead font-weight-bold\">Login</Nav.Link>\n            </div>\n          </Nav>\n        )}\n      </Navbar>\n    </Container>\n  )\n}\n","import React from \"react\"\nimport { Container, Row, Col } from \"react-bootstrap\"\nimport \"./widgets.css\"\n\nconst Widgets = ({ workingSensors }) => {\n\n  var avgTemp = workingSensors.reduce(\n    (a, b) => a + b.temperature,\n    0\n  ) / workingSensors.length || 0\n\n  var avgHum = workingSensors.reduce(\n    (a, b) => a + b.humidity,\n    0\n  ) / workingSensors.length || 0\n\n  return (\n    <Container>\n      <Row lg=\"8\" xl=\"7\" className=\"justify-content-center\">\n        <Col className=\"widget \">\n          <h1 className=\"value\">{workingSensors.length}</h1>\n          <p className=\"description\">Active sensors</p>\n        </Col>\n        <Col className=\"widget\">\n          <h1 className=\"value\">{avgTemp.toFixed(1)}°C</h1>\n          <p className=\"description\">Avg.Temp</p>\n        </Col>\n        <Col className=\"widget\">\n          <h1 className=\"value\">{avgHum.toFixed(1)}%</h1>\n          <p className=\"description\">Avg.Hum</p>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Widgets\n","import React from 'react';\nimport { Overlay, Popover } from 'react-bootstrap';\nexport function Sensorhoverview(props) {\n  if (props.fault_code === '') {\n    return (\n      <Overlay\n        transition={null}\n        show={props.show}\n        target={props.target}\n        placement='top'\n        containerPadding={20}\n      >\n        <Popover id='popover-contained'>\n          <Popover.Title\n            className='text-nowrap'\n            style={{ backgroundColor: '#349CDB', color: '#ffffff' }}\n            as='h3'\n          >\n            Sensor Information\n          </Popover.Title>\n          <Popover.Content>\n            <strong>Floor:</strong> {props.floor}\n            <br />\n            <strong>X:</strong> {props.loc_x + ' '}\n            <strong>Y:</strong> {props.loc_y}\n            <br />\n            <strong>T:</strong>{' '}\n            {(Math.round(props.temperature * 100) / 100).toFixed(1) + ' °C '}\n            <strong>H:</strong>{' '}\n            {(Math.round(props.humidity * 100) / 100).toFixed(1)}\n          </Popover.Content>\n        </Popover>\n      </Overlay>\n    );\n  } else {\n    return (\n      <Overlay\n        transition={null}\n        show={props.show}\n        target={props.target}\n        placement='top'\n        containerPadding={20}\n      >\n        <Popover id='popover-contained'>\n          <Popover.Title\n            className='text-nowrap'\n            style={{ backgroundColor: '#C12D3F', color: '#ffffff' }}\n            as='h3'\n          >\n            Sensor Information\n          </Popover.Title>\n          <Popover.Content>\n            <strong>An unexpected error occured:</strong>\n            <br />\n            {DisplayErrorCode(props.fault_code)}\n          </Popover.Content>\n        </Popover>\n      </Overlay>\n    );\n  }\n}\n\nfunction DisplayErrorCode(error) {\n  switch (error) {\n    case 'ERROR_TEMPERATURE_OUT_OF_RANGE':\n      return 'Temperature was unreasonably high or low';\n\n    case 'ERROR_TEMPERATURE_DIFFERENCE_MORE_THAN_2_CELSIUS':\n      return 'Temperature changed abruptly';\n\n    case 'ERROR_NOT_ENOUGH_VALID_ENTRIES':\n      return 'Sensor did not send enough temperature measurements';\n    default:\n      return 'Unknown error...';\n  }\n}\n\nexport default Sensorhoverview;\n","import React, { useState, useRef } from 'react'\nimport '../../fonts/OpenSans-Regular.ttf'\nimport './sensor.css'\nimport SensorHoverView from './sensorHoverView'\n\nexport default function Sensor({\n  floor,\n  loc_x,\n  loc_y,\n  faulty,\n  fault_code,\n  cellHeight = 100 / 32,\n  cellWidth = 100 / 14,\n  temperature = 0.0,\n  humidity\n}) {\n\n  const [show, setShow] = useState(false)\n  const [target, setTarget] = useState(null)\n  const ref = useRef(null)\n\n  const handleHover = (event) => {\n    setShow(true)\n    setTarget(event.target)\n  }\n\n  const handleClose = (event) => {\n    setShow(false)\n  }\n\n  if (!faulty) {\n    return (\n      <>\n        <div\n          ref={ref}\n          onMouseEnter={handleHover}\n          onMouseLeave={handleClose}\n          className='sensor working-sensor'\n          style={{\n            left: (loc_x - 1.25) * cellWidth + '%',\n            top: (loc_y - 1.25) * cellHeight + '%',\n            width: cellWidth + '%',\n            height: cellHeight + '%',\n          }}\n        >\n          <span>{temperature.toFixed(1) + '°C'}</span>\n          <SensorHoverView\n            show={show}\n            target={target}\n            floor={floor}\n            temperature={temperature}\n            fault_code=''\n            humidity={humidity}\n            loc_x={loc_x}\n            loc_y={loc_y}\n          />\n        </div>\n      </>\n    )\n  } else {\n    return (\n      <>\n        <div\n          onMouseEnter={handleHover}\n          onMouseLeave={handleClose}\n          className='sensor faulty-sensor'\n          style={{\n            position: 'absolute',\n            left: (loc_x - 1.25) * cellWidth + '%',\n            top: (loc_y - 1.25) * cellHeight + '%',\n            width: cellWidth + '%',\n            height: cellHeight + '%',\n          }}\n        >\n          <span>!</span>\n          <SensorHoverView\n            show={show}\n            target={target}\n            floor={floor}\n            fault_code={fault_code}\n            loc_x={loc_x}\n            loc_y={loc_y}\n          />\n        </div>\n      </>\n    )\n  }\n}\n","import React, { useState } from 'react'\nimport './LoginPage.css'\nimport logo from './kozi-isaac-logo.png'\nimport { Redirect, useHistory } from 'react-router-dom'\nimport { gql, useLazyQuery } from '@apollo/client'\nimport { Alert } from 'react-bootstrap'\nimport { useAuthenticatedUser } from '../../hooks'\n\nconst LOGIN_QUERY = gql`query Login($email: String, $password:String){\n    Login(email: $email password: $password){\n      accessToken \n      error\n    }\n  }\n`\n\nexport default function LoginPage() {\n  const history = useHistory()\n\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const user = useAuthenticatedUser()\n\n  const [login, { error, data }] = useLazyQuery(LOGIN_QUERY)\n\n  const handleLogin = (event) => {\n    event.preventDefault()\n    login({\n      variables: {\n        email: event.target.elements.email.value,\n        password: event.target.elements.password.value,\n      },\n    })\n  }\n\n  const toHome = (e) => {\n    e.preventDefault()\n    history.push('')\n  }\n\n  if (user) {\n    return <Redirect to='/' />\n  }\n\n  if (data && data.Login.accessToken) {\n    localStorage.setItem('token', data.Login.accessToken)\n    return <Redirect to='/' />\n  }\n\n  if (data && data.Login.error && data.Login.error !== errorMessage) {\n    setErrorMessage(data.Login.error)\n  }\n\n  if (error) {\n    console.log(error)\n  }\n\n  return (\n    <div className='main-login'>\n      <small> {user && user.email} </small>\n      <link\n        href='https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css'\n        rel='stylesheet'\n      />\n      <div className='d-md-flex h-md-100 align-items-center'>\n        <div className='col-md-6 pt-md-5 p-0 h-md-100 '>\n          <div className='text-white  d-md-flex h-100 p-5'>\n            <div className='p-md-5 pb-5'>\n              <div className='d-flex justify-content-center align-items-center'>\n                <div className='col-10 col-md-10'>\n                  <img className='img img-fluid' src={logo} alt='logo' />\n                </div>\n              </div>\n\n              <hr />\n\n              <p className='text-p-secondary h2 mt-5'>Login</p>\n\n              <form className='mt-3' onSubmit={handleLogin}>\n                <label htmlFor='email' className='text-p-secondary'>\n                  Email\n                </label>\n                <div className='input-group'>\n                  <div className='input-group-prepend'>\n                    <span className='input-group-text'>\n                      <i className='fa fa-envelope' aria-hidden='true'></i>\n                    </span>\n                  </div>\n                  <input type='email' name='email' className='form-control' />\n                </div>\n\n                <label htmlFor='email' className='text-p-secondary mt-4'>\n                  Password\n                </label>\n                <div className='input-group'>\n                  <div className='input-group-prepend'>\n                    <span className='input-group-text'>\n                      <i className='fa fa-unlock-alt' aria-hidden='true'></i>\n                    </span>\n                  </div>\n                  <input\n                    type='password'\n                    name='password'\n                    className='form-control'\n                  />\n                </div>\n                {/* Error message */}\n                <Alert className='mt-4' show={errorMessage} variant='info'>\n                  {' '}\n                  {errorMessage}{' '}\n                </Alert>\n\n                <div className='col-xl-6'>\n                  <button\n                    id='submitAction'\n                    type='submit'\n                    className='btn btn-p-primary btn-block btn-round mt-5  '\n                  >\n                    <span\n                      id='main-executeAction'\n                      className='text-p-primary text-font-primary'\n                    >\n                      Login\n                    </span>\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n\n        <div className='col-md-6 bg-blue '>\n          <div className='d-flex flex-column align-items-center h-md-100  p-5 justify-content-center'>\n            <h1 id='side-action' className='h1 text-white'>\n              Guest\n            </h1>\n            <p id='side-description' className='text-white h4 text-center'>\n              Enter to view real-time sensor information!\n            </p>\n            <a\n              href='/'\n              id='switcher'\n              onClick={toHome}\n              className='btn btn-round btn-switcher btn-lg btn-block mt-3'\n            >\n              Login as a guest\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: process.env.REACT_APP_API_URL || 'http://localhost:4000/graphql/',\n  cache: new InMemoryCache(),\n});\n\nconst root = document.getElementById('root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <BrowserRouter basename='/kozi-frontend'>\n        <App />\n      </BrowserRouter>\n    </ApolloProvider>\n  </React.StrictMode>,\n  root\n);\n"],"sourceRoot":""}